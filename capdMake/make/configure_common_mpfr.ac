
saved_LIBS="${LIBS}"

AC_ARG_WITH([mpfr],
    [AS_HELP_STRING([--with-mpfr],
         [use GNU MP library @<:@default=check@:>@])],
         [],
         [with_mpfr=check])


AS_IF([test "x$with_mpfr" != xno],
      [AC_CHECK_LIB(gmp, __gmpz_init, [], [AC_MSG_WARN([Cannot find gmp library])])
      AC_CHECK_LIB(gmpxx, exit, [], [AC_MSG_WARN([Cannot find gmpxx library])])
      AC_CHECK_LIB(mpfr, mpfr_init, [], [AC_MSG_WARN([Cannot find mpfr library])])
      ])


#AS_IF([test "x$with_mpfr" != xno && test "x$with_mpfr" != xcheck &&
#        (test "x${ac_cv_lib_gmp___gmpz_init}" != xyes || test "x${ac_cv_lib_mpfr_mpfr_init}" != xyes ||
#         test "x${ac_cv_lib_gmpxx_exit}" != xyes)],
#      [AC_MSG_FAILURE(
#                [--with-mpfr was given, but test for mpfr failed])], [])


AS_IF([test "x${ac_cv_lib_gmp___gmpz_init}" = xyes && test "x${ac_cv_lib_mpfr_mpfr_init}" = xyes &&
        test "x${ac_cv_lib_gmpxx_exit}" = xyes],
      [HAVE_LIBmpfr=yes
             AC_SUBST([mpfr_CFLAGS], ["-D__HAVE_MPFR__"])
	         AC_SUBST([mpfr_LIBS], ["-lgmp -lgmpxx -lmpfr"])
	         AM_CONDITIONAL([HAVE_LIBmpfr], [true])
      ],
      [HAVE_LIBmpfr=no
        AM_CONDITIONAL([HAVE_LIBmpfr], [false])]
)

AS_IF([test "x$with_mpfr" != xno && test "x$with_mpfr" != xcheck && test "x$HAVE_LIBmpfr" = "xno"],
         [AC_MSG_FAILURE([--with-mpfr was given, but test for mpfr failed])]
)


# AM_CONDITIONAL([HAVE_LIBmpfr], [test "x$HAVE_LIBmpfr" = "xyes"])
# ---


LIBS="${saved_LIBS}"
