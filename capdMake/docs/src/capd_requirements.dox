/*! \page capd_requirements CAPD requirements

\section capd_requirements_linux Linux

The CAPD::DynSys uses very standard tools and libraries, only.
- \b gcc, \b g++ or \b clang++ (must support at least C++17 standard).
- \b make, \b cmake (version 3.13.0 or newer)
- \b pkg-config
- \b git or \b unzip (depending if you prefer to clone CAPD git repository or unzip an arvchive with stable CAPD release)
- To enable <b>multiple precision</b> support in the CAPD, the libraries \b gmp and \b mpfr are required. <br/>
- We recommend to install [**Boost**](http://www.boost.org) library (header files and binaries).
  
On Ubuntu and Debian systems one can install all above libraries but the compiler by  

\code
sudo apt-get install libgmp-dev libmpfr-dev libboost-all-dev git cmake autoconf libtool
\endcode

The CAPD package was tested on Linux distributions: Debian, Ubuntu.

\section capd_requirements_windows Windows

The current version of CAPD uses automated compilation tools therefore it needs linux like shell console and selection of other tools.
We recommend to use **Windows Subsystem for Linux**

[**https://learn.microsoft.com/en-us/windows/wsl**](https://learn.microsoft.com/en-us/windows/wsl)

and within Linux console for Windows install all tools required for the Linux system.

\section capd_requirements_osx OSX

1) Install C++ compiler from Command Line Tools (it is also shipped with XCode) by doing one of the following:
- Install \b Xcode from App Store (it is quite heavy).
- It is enough to download and install <b>Command Line Tools</b> from
  <a href="http://developer.apple.com/downloads/index.action">Apple Developers</a>
 (search for "command line tools").

2) If you have an \b M1, \b M2, \b M3, ... chip, to use the filib interval library one needs Rosetta (Intel processor emulator).<br/>
   If you have an Intel mac, ignore this step.
    - in Finder find Terminal (which should be in Applications/Utilities/),
      right mouse click on it, and choose “Get Info”.
      Choose the “open using Rosetta” tickbox. Install Rosetta when prompted if you do not have one.
    - Quit Terminal.

        <i> You can choose to have two versions of Terminal.
        One running with Rosetta and the other to run without it.
         To do so simply duplicate the Terminal application,
         and choose one of the terminal application to be under Rosetta and the other without it.
         Use the Rosetta terminal for the below installation steps. </i>

3) Install \b Homebrew  (if you already do not have one)

   - In Terminal paste and execute:
     \code{.sh}
     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)”
     \endcode
     (see https://brew.sh for details.)

4) Install \b GNU \b tools and libraries, that CAPD depends on.

   -  In Terminal execute the following commands:
      \code{.sh}
      brew install pkg-config make autoconf cmake boost git
      \endcode

   - To use multiple precision in CAPD execute
     \code{.sh}
     brew install gmp mpfr
     \endcode

   - To generate documentation one needs
     \code{.sh}
     brew install doxygen
     \endcode

5) <i>Optional/Experimental</i> OSX is using <b>clang</b> compiler (gcc and g++ are just symbolic links).
We have not tested it for compatibility with our code.
You can compile the code, but we are not sure about compatibility with roundings etc.
You can experiment with original version of gcc/g++ which you can install using following commands:
\code{.sh}
brew install gcc
\endcode

*/
