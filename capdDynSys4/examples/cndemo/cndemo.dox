/**
 * \page examples_cndemo  Computations of higher order derivatives
 *
 *\f$ C^r\f$ computations
 *
 * In the following examples we show how to use CAPD to integrate ODE along with variational equations
 * to obtain not only image of a set but also <b>normalized derivatives</b> up to given order r with respect to initial conditions</b>.
 *
 * In general classes that we use have \b ICn prefix, which means that they rigorously (\b I) compute and store derivatives to given order (\b Cn).
 *
 * \section cndemo_ex1 Integration of ODE
 *
 * \dontinclude cndemo1.cpp
 *
 * We integrate a harmonic oscilator for a half of period with fixed time step.
 * So we expect fist derivative to be
 * \f$ \left (
 * \begin{array}{cc}
 * -1 &  0\\
 *  0 & -1
 * \end{array}
 * \right )
 * \f$
 * and the other derivatives to be equal 0.
 *
 * We need to include only one file
 * \skipline capdlib.h
 *
 * \skip vector field
 * \until currentSet
 *
 * The next example shows how to compute higher order derivatives with respect to initial condition with automatic step control along the trajectory. 
 *
 * \section cndemo_ex2 Integration of ODE with automatic time step control (TSC)
 *
 * In this example we changed the ODE and initial condition but in fact the only important difference is that instead of  moving set "manually"
 * we will use TimeMap class with automatic Time Step Control (TSC).
 * \dontinclude cndemo2.cpp
 * \skipline timeMap
 *
 * This class computes image of a given set after a given time.
 * \skipline set
 *
 * Full source of this example
 * \dontinclude cndemo2.cpp
 * \skip include
 * \until }
 *
 * \section cndemo_ex3 How to compute derivatives of order bigger than 3?
 *
 * We need to specify the maximal degre of the vector field IMap in the last argument of the contructor. 
 * \dontinclude cndemo3.cpp
 * \skip degree
 * \until IMap
 *
 * Now we can use our types instead of built-in and the rest remains the same:
 * \dontinclude cndemo3.cpp
 * \skip include
 * \until }
 */
